version: '3.8'

services:
  postgres:
    image: postgres:15
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - ./db/inventory_ddl.sql:/docker-entrypoint-initdb.d/inventory_ddl.sql

  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:7.4.0
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  jobmanager:
    image: flink:1.17.1-scala_2.12-java11
    command: jobmanager
    ports:
      - "8081:8081"
    environment:
      - |-
        FLINK_PROPERTIES=
        jobmanager.rpc.address: jobmanager
    depends_on:
      - kafka
      - postgres

  taskmanager:
    image: flink:1.17.1-scala_2.12-java11
    command: taskmanager
    depends_on:
      - jobmanager
    environment:
      - |-
        FLINK_PROPERTIES=
        jobmanager.rpc.address: jobmanager

  producer:
    build:
      context: .
      dockerfile: docker/Dockerfile.producer
    depends_on:
      - kafka
      - postgres
    environment:
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}

  flink-app:
    build:
      context: .
      dockerfile: docker/Dockerfile.flink
    depends_on:
      - taskmanager
    environment:
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
