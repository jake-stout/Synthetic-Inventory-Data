networks:
  streaming:
    driver: bridge

volumes:
  zookeeper_data:
  zookeeper_log:
  kafka_data:
  postgres_data:
  pgadmin_data:

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    volumes:
      - zookeeper_data:/var/lib/zookeeper/data
      - zookeeper_log:/var/lib/zookeeper/log
    networks:
      - streaming

  kafka:
    image: confluentinc/cp-kafka:7.4.0
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    volumes:
      - kafka_data:/var/lib/kafka/data
    networks:
      - streaming

  postgres:
    image: postgres:15
    ports:
      - "54321:5432"
    environment:
      POSTGRES_DB: ${DB_NAME:-inventory}
      POSTGRES_USER: ${DB_USER:-inventory}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-inventory}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./db/inventory_ddl.sql:/docker-entrypoint-initdb.d/inventory_ddl.sql
    networks:
      - streaming

  pgadmin:
    image: dpage/pgadmin4:8.5
    depends_on:
      - postgres
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-admin@admin.com}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - streaming

  jobmanager:
    image: flink:1.17.1-scala_2.12-java11
    command: jobmanager
    ports:
      - "8081:8081"
    environment:
      - |
        FLINK_PROPERTIES=
        jobmanager.rpc.address: jobmanager
    depends_on:
      - kafka
      - postgres
    networks:
      - streaming

  taskmanager:
    image: flink:1.17.1-scala_2.12-java11
    command: taskmanager
    environment:
      - |
        FLINK_PROPERTIES=
        jobmanager.rpc.address: jobmanager
    depends_on:
      - jobmanager
    networks:
      - streaming

  api:
    build:
      context: ./api
    working_dir: /app
    environment:
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: ${DB_NAME:-inventory}
      DB_USER: ${DB_USER:-inventory}
      DB_PASSWORD: ${DB_PASSWORD:-inventory}
    depends_on:
      - postgres
    ports:
      - "8000:8000"
    networks:
      - streaming
